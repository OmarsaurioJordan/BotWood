<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -(room_height * 2);
persistent = true;

globalvar dlt;
dlt = 0;

escint = 1;
eschum = 0.35;
pausa = false;

inmune = false;
munidronsuelo = 0;
oleada = 1;
tipomapa = -1;

ini_open("configuracion.ini");
if ini_read_string("config", "onepunch", "0") == "0" {
    onepunch = false; }
else { onepunch = true; }
if ini_read_string("config", "fatal", "0") == "0" {
    fatal = false; }
else { fatal = true; }
if ini_read_string("config", "compartepad", "0") == "0" {
    compartepad = false; }
else { compartepad = true; }
maxvidas = real(ini_read_string("config", "maxvidas", "3"));
ini_close();

players = "xxxxxxxxxxxx";
bots = "0000";
ayudantes = "0000";
mundo = "bwmap_user.ini";

minutos = 0;
segundos = 0;
reloj = 0;

cargamapaedit = false;

randomize();
alarm[0] = room_speed * 15;

sonido = 2;
audio_master_gain(1);
audio_channel_num(150);

hand_rv = -1;
s_actualizacion(id);
s_http_contador(true);

alarm[2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// inicio tutorial
var tutorial = false;
ini_open("configuracion.ini");
if ini_read_string("config", "tutorial", "1") != "0" {
    tutorial = true; }
ini_write_string("config", "tutorial", "0");
ini_close();
if tutorial
{
    room_goto(w_howto);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pantalla negra
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sonido tos y pajaros
if instance_exists(o_pacificante) or instance_exists(o_elman)
{
    audio_play_sound(a_men_tos, 99, false);
}
if random(1) &lt; instance_number(o_arbol) / m_arbolespaja
{
    audio_play_sound(a_map_pajaros, 5, false);
}
alarm[2] = room_speed * (10 + irandom(20));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///oleadas asediadores
if !instance_exists(o_asediador) and instance_exists(o_edificio) and instance_exists(o_puntoasedio)
{
    oleada++;
    audio_play_sound(a_map_oleada, 99, false);
    repeat oleada
    {
        var as = instance_find(o_puntoasedio, irandom(instance_number(o_puntoasedio) - 1));
        instance_create(as.x, as.y, o_asediador);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///randomizar
randomize();
alarm[0] = room_speed * 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delta
if pausa {
    dlt = 0;
}
else {
    dlt = min(100000, delta_time);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///commands
if keyboard_check_pressed(vk_anykey)
{
    switch keyboard_key
    {
        case vk_tab:
            if room == w_juego or room == w_lobby or room == w_demo
            {
                pausa = !pausa;
            }
            else if room == w_howto
            {
                room_goto(w_menu);
            }
            break;
        
        case vk_escape:
            if alarm[3] == -1
            {
                alarm[3] = room_speed;
            }
            else if room == w_menu
            {
                game_end();
            }
            else
            {
                room_goto(w_menu);
            }
            break;
        
        case vk_backspace:
            if room == w_configuracion {
                break;
            }
            switch sonido
            {
                case 0:
                    sonido = 1;
                    audio_master_gain(1);
                    break;
                
                case 1:
                    sonido = 2;
                    audio_master_gain(1);
                    break;
                
                case 2:
                    sonido = 0;
                    audio_master_gain(0);
                    break;
            }
            s_ponemusica();
            break;
        
        case vk_f4:
            window_set_fullscreen(!window_get_fullscreen());
            break;
        
        case vk_f10:
            s_foto();
            break;
        
        case vk_f1:
            if window_get_fullscreen()
            {
                window_set_fullscreen(false);
            }
            else
            {
                var fff = get_save_filename("APP|*.apk", "BotWoodGp");
                if fff != ""
                {
                    file_copy("BotWoodGp.apk", fff);
                }
            }
            break;
        
        case vk_f8:
            if window_get_fullscreen()
            {
                window_set_fullscreen(false);
            }
            else
            {
                var fff = get_save_filename("INI|*.ini", "");
                if fff != "" and file_exists("bwmap_user.ini")
                {
                    file_copy("bwmap_user.ini", fff);
                }
            }
            break;
        
        case vk_f7:
            if window_get_fullscreen()
            {
                window_set_fullscreen(false);
            }
            else
            {
                var fff = get_open_filename("INI|*.ini", "");
                if fff != ""
                {
                    file_copy(fff, "bwmap_user.ini");
                }
            }
            break;
        
        case vk_f2:
            if room == w_menu and !window_get_fullscreen()
            {
                execute_shell_simple("https://omwekiatl.itch.io/botwood");
            }
            break;
    }
}

if !pausa and (room == w_juego or room == w_demo)
{
    reloj += dlt;
    if reloj &gt;= 1000000
    {
        reloj -= 1000000;
        segundos++;
        if segundos &gt;= 60
        {
            segundos = 0;
            minutos++;
        }
    }
}

if room == w_menu or room == w_lobby or room == w_configuracion {
    if mouse_check_button_pressed(mb_left) {
        var otr = instance_nearest(mouse_x, mouse_y + 44, o_puerta);
        if point_distance(mouse_x, mouse_y + 44, otr.x, otr.y) &lt; 32 {
            switch otr.seleccion
            {
                case 1: mundo = "bwmap_torres_c.ini"; break;
                case 2: mundo = "bwmap_torres_b.ini"; break;
                case 3: mundo = "bwmap_torres_a.ini"; break;
                case 4: mundo = "bwmap_fuego_d.ini"; break;
                case 5: mundo = "bwmap_fuego_c.ini"; break;
                case 6: mundo = "bwmap_fuego_b.ini"; break;
                case 7: mundo = "bwmap_fuego_a.ini"; break;
                case 8: mundo = "bwmap_mele_b.ini"; break;
                case 9: mundo = "bwmap_mele_a.ini"; break;
                case 10: mundo = "bwmap_globo_b.ini"; break;
                case 11: mundo = "bwmap_globo_a.ini"; break;
                case 13: mundo = "bwmap_asediadores_a.ini"; break;
                case 14: mundo = "bwmap_asediadores_b.ini"; break;
                case 15: mundo = "bwmap_asediadores_c.ini"; break;
                case 16: mundo = "bwmap_distancia_a.ini"; break;
                case 17: mundo = "bwmap_distancia_b.ini"; break;
                case 18: mundo = "bwmap_distancia_c.ini"; break;
                case 19: mundo = "bwmap_distancia_d.ini"; break;
                case 20: mundo = "bwmap_aro_a.ini"; break;
                case 21: mundo = "bwmap_aro_b.ini"; break;
                case 22: mundo = "bwmap_aro_c.ini"; break;
                case 23: mundo = "bwmap_user.ini"; break;
            }
            switch otr.seleccion
            {
                case 24:
                    audio_play_sound(a_men_puerta, 99, false);
                    room_goto(w_demo);
                break;
                
                case 25:
                    audio_play_sound(a_men_puerta, 99, false);
                    cargamapaedit = false;
                    room_goto(w_editor);
                break;
                
                case 26:
                    audio_play_sound(a_men_puerta, 99, false);
                    cargamapaedit = true;
                    room_goto(w_editor);
                break;
                
                case 27:
                    audio_play_sound(a_men_puerta, 99, false);
                    if room == w_configuracion {
                        ini_open("configuracion.ini");
                        if onepunch {
                            ini_write_string("config", "onepunch", "1"); }
                        else {
                            ini_write_string("config", "onepunch", "0"); }
                        if fatal {
                            ini_write_string("config", "fatal", "1"); }
                        else {
                            ini_write_string("config", "fatal", "0"); }
                        if compartepad {
                            ini_write_string("config", "compartepad", "1"); }
                        else {
                            ini_write_string("config", "compartepad", "0"); }
                        ini_write_string("config", "maxvidas", string(maxvidas));
                        // IP
                        with o_gamepad {
                            
                            show_debug_message("1. efectuelo edi: " + edita_ip);
                            
                            if edita_ip != mascara_red and s_str_es_ip_msk(edita_ip) {
                                mascara_red = edita_ip;
                                ini_write_string("config", "mascara_red", mascara_red);
                                for (var i = 0; i &lt; 12; i++) {
                                    user_ip[i] = "";
                                    user_final[i] = 0;
                                    user_direction[i] = -1;
                                }
                                
                                show_debug_message("2. SI msk: " + mascara_red);
                                
                            }
                            else {
                                
                                show_debug_message("2. NO msk: " + mascara_red);
                                
                                edita_ip = mascara_red;
                            }
                        }
                        ini_close();
                    }
                    room_goto(w_menu);
                break;
                
                case 29:
                    audio_play_sound(a_men_puerta, 99, false);
                    room_goto(w_configuracion);
                break;
                
                case 30:
                    audio_play_sound(a_men_puerta, 99, false);
                    room_goto(w_howto);
                break;
                
                case 0:
                case 12:
                break;
                
                default:
                    audio_play_sound(a_men_puerta, 99, false);
                    room_goto(w_lobby);
                break;
            }
        }
        // opciones
        else if instance_exists(o_opciones) {
            otr = instance_nearest(mouse_x, mouse_y + 56, o_opciones);
            if point_distance(mouse_x, mouse_y + 56, otr.x, otr.y) &lt; 32 {
            switch otr.opccc
            {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    with o_opciones {
                        if opccc &lt; 8 { activa = false; } }
                    otr.activa = true;
                    onepunch = true;
                    maxvidas = otr.opccc + 1;
                break;
                    
                case 6:
                case 7:
                    with o_opciones {
                        if opccc &lt; 8 { activa = false; } }
                    otr.activa = true;
                    onepunch = false;
                    if otr.opccc == 7 {
                        fatal = true; }
                    else { fatal = false; }
                break;
                
                case 8:
                    with o_opciones {
                        if opccc == 9 { activa = false; } }
                    otr.activa = true;
                    compartepad = true;
                break;
                
                case 9:
                    with o_opciones {
                        if opccc == 8 { activa = false; } }
                    otr.activa = true;
                    compartepad = false;
                break;
            } }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_http_actu(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse

if room == w_menu {
    draw_sprite_ext(d_qr, 0, room_width / 2, room_height / 2,
        0.666, 0.666, 0, c_white, 1);
}
switch room {
    case w_lobby:
    case w_menu:
    case w_howto:
    case w_configuracion:
        var e = 0.75;
        var c = c_white;
        with o_reloj {
            if point_in_rectangle(mouse_x, mouse_y,
                    x - 36, y - 36, x + 36, y + 36) {
                e = 1;
                c = c_orange;
            }
        }
        with o_selectia {
            if point_in_rectangle(mouse_x, mouse_y,
                    x - 14, y - 64, x + 14, y) {
                e = 1;
                c = c_orange;
            }
        }/*
        if instance_exists(o_titulos) {
            var otr = instance_nearest(mouse_x, mouse_y + 44, o_titulos);
            if point_distance(mouse_x, mouse_y + 44, otr.x, otr.y) &lt; 32 {
                e = 1;
                c = c_orange;
            }
        }*/
        if instance_exists(o_puerta) {
            var otr = instance_nearest(mouse_x, mouse_y + 44, o_puerta);
            if point_distance(mouse_x, mouse_y + 44, otr.x, otr.y) &lt; 32 {
                e = 1;
                c = c_orange;
            }
        }
        if instance_exists(o_opciones) {
            var otr = instance_nearest(mouse_x, mouse_y + 56, o_opciones);
            if point_distance(mouse_x, mouse_y + 56, otr.x, otr.y) &lt; 32 {
                e = 1;
                c = c_orange;
            }
        }
        if room == w_configuracion {
            var xx = room_width * o_gamepad.ip_x;
            var yy = room_height * o_gamepad.ip_y;
            if point_in_rectangle(mouse_x, mouse_y,
                    xx - 100, yy - 20, xx + 100, yy + 20) {
                e = 1;
                c = c_orange;
            }
        }
        draw_sprite_ext(d_mouse, 0, mouse_x, mouse_y,
            e, e, 0, c, 1);
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[3] != -1
{
    draw_set_alpha(0.25);
    draw_rectangle_colour(0, 0, room_width, room_height,
        c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1);
}

if pausa and room != w_editor
{
    draw_sprite(d_pausa, 0, room_width * 0.5, room_height * 0.5);
}

if room == w_menu
{
    draw_set_valign(fa_top);
    draw_set_halign(fa_right);
    draw_text_transformed_colour(room_width - 6, 3,
        "BotWood by Omwekiatl 2020#Music: TheSubmarine-Atlantis#v:" + m_version,
        0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);
    draw_set_valign(fa_bottom);
    with o_gamepad
    {
    draw_text_transformed_colour(room_width - 6, room_height - 3,
        "F1 export Android App file",
        0.8, 0.8, 0, c_black, c_black, c_black, c_black, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
