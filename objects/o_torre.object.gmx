<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_altobloq</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
direction = irandom(359);

adondeveo = irandom(359);
velg = 0;
reloj_adonde = irandom(m_torredonde);
reloj_recarga = m_torrerecarg;

conedificios = false;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(o_edificio)
{
    conedificios = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    //poner punto al cual se mirara
    reloj_adonde -= dlt;
    if reloj_adonde &lt;= 0
    {
        reloj_adonde = (m_torredonde + irandom(m_torredonde)) * 0.5;
        
        if choose(true, false)
        {
            var dia = m_radext * o_suelo.resise;
            var xx = o_suelo.x + dia - irandom(dia * 2);
            var yy = o_suelo.y + dia - irandom(dia * 2);
            adondeveo = point_direction(x, y, xx, yy);
        }
        else
        {
            adondeveo = irandom(359);
        }
    }
    
    //mirar a punto puesto
    var ant = s_angulo16(direction);
    var ad = angle_difference(direction, adondeveo);
    if abs(ad) &gt;= 4
    {
        velg = m_velgiro * sign(ad);
    }
    else
    {
        velg *= m_fricgiro;
    }
    direction -= velg * 1.25 * dlt;
    if !audio_is_playing(a_map_torregira) and
        ant != s_angulo16(direction)
    {
        audio_play_sound(a_map_torregira, 5, false);
    }
    
    //recargar disparo
    if reloj_recarga != 0
    {
        reloj_recarga -= dlt;
        if reloj_recarga &lt;= 0
        {
            reloj_recarga = 0;
        }
    }
    else if irandom(1) &lt; 0.333 and //disparar a robots
        (instance_exists(o_edificio) or !conedificios)
    {
        var paso = m_rad_m * 0.5;
        var visto = false;
        var edi = false;
        var xx, yy, otro;
        
        //no haya edificios en frente
        for (var i = paso; i &lt;= m_laser; i += paso)
        {
            xx = x + lengthdir_x(i, direction);
            yy = y + lengthdir_y(i, direction);
            otro = s_colision(xx, yy, paso, o_edificio,
                m_rad_m * 2, 1, -1);
            if otro != noone
            {
                edi = true;
                break;
            }
        }
        
        if !edi
        {
            //buscar si colisiona con robots
            for (var i = paso; i &lt;= m_laser; i += paso)
            {
                xx = x + lengthdir_x(i, direction);
                yy = y + lengthdir_y(i, direction);
                otro = s_colision(xx, yy, paso, o_altobloq,
                    m_rad_m, 1, id);
                if otro != noone
                {
                    if otro.object_index == o_robot
                    {
                        if s_chequeorobot(otro.origen, m_funcional)
                        {
                            visto = true;
                        }
                    }
                    else if otro.object_index == o_asediador
                    {
                        visto = true;
                    }
                    break;
                }
            }
        }
        
        //crear el proyectil
        if visto
        {
            reloj_recarga = m_torrerecarg;
            var pp = instance_create(
                x + lengthdir_x(20, direction),
                y + lengthdir_y(20, direction),
                o_proy);
            pp.direction = direction + 4 - random(8);
            pp.origen = id;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_ext_bloque, 7, x, y);
draw_sprite(d_ext_robot, 57 + s_angulo16(direction), x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
