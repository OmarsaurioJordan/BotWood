<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -(y + 34);

reloj = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    if !audio_is_playing(a_men_reloj1) and !audio_is_playing(a_men_reloj2)
    {
        if reloj &gt; m_relojlobby * 0.5
        {
            audio_play_sound(a_men_reloj2, 99, false);
        }
        else
        {
            audio_play_sound(a_men_reloj1, 99, false);
        }
    }
    
    reloj += dlt;
    if reloj &gt;= m_relojlobby
    {
        reloj -= m_relojlobby;
        audio_play_sound(a_men_noreloj, 99, false);
    }
    
    var clic = false;
    if mouse_check_button_pressed(mb_left) {
        clic = point_in_rectangle(mouse_x, mouse_y,
            x - 36, y - 36, x + 36, y + 36);
    }
    if clic {
        var todoslistos = true;
        
        //ver en donde estan hubicados los personajes
        o_game.players = "";
        for (var i = 1; i &lt;= 12; i++)
        {
            with o_elmen
            {
                if quien == i
                {
                    if semovio
                    {
                        if point_distance(room_width * 0.25 + 150,
                            room_height * 0.25 + 40, x, y) &lt;= m_radint * 0.6
                        {
                            o_game.players += "0";
                        }
                        else if point_distance(room_width * 0.75 + 150,
                            room_height * 0.25 + 40, x, y) &lt;= m_radint * 0.6
                        {
                            o_game.players += "1";
                        }
                        else if point_distance(room_width * 0.25 + 150,
                            room_height * 0.75 + 40, x, y) &lt;= m_radint * 0.6
                        {
                            o_game.players += "2";
                        }
                        else if point_distance(room_width * 0.75 + 150,
                            room_height * 0.75 + 40, x, y) &lt;= m_radint * 0.6
                        {
                            o_game.players += "3";
                        }
                        else
                        {
                            o_game.players += "x";
                            todoslistos = false;
                        }
                    }
                    else
                    {
                        o_game.players += "x";
                    }
                    break;
                }
            }
        }
        
        if todoslistos
        {
            //ver que robots seran usados
            o_game.bots = "";
            for (var i = 0; i &lt; 4; i++)
            {
                if string_count(string(i), o_game.players) == 0
                {
                    o_game.bots += "0";
                }
                else
                {
                    o_game.bots += "1";
                }
            }
            
            //mirar si se activaran los ayudantes
            if false
            {/*
                var pp;
                for (var i = 0; i &lt; 4; i++)
                {
                    pp[i] = string_count(string(i), o_game.players);
                }
                var mm = max(pp[0], pp[1], pp[2], pp[3]);
                if mm != min(pp[0], pp[1], pp[2], pp[3]) or mm == 1
                {
                    o_game.ayudantes = "";
                    for (var i = 0; i &lt; 4; i++)
                    {
                        if pp[i] != 0 and (pp[i] != mm or pp[i] == 1)
                        {
                            o_game.ayudantes += "1";
                        }
                        else
                        {
                            o_game.ayudantes += "0";
                        }
                    }
                }
                else
                {
                    o_game.ayudantes = "0000";
                }*/
            }
            else
            {
                o_game.ayudantes = "";
                var ese;
                var n = 1;
                for (var j = 0; j &lt; 2; j++)
                {
                    for (var i = 0; i &lt; 2; i++)
                    {
                        ese = instance_nearest(room_width * i, room_height * j, o_selectia);
                        if ese.activa and string_char_at(o_game.bots, n) == "1"
                        {
                            o_game.ayudantes += "1";
                        }
                        else
                        {
                            o_game.ayudantes += "0";
                        }
                        n++;
                    }
                }
            }
            
            //mirar si se puede continuar al juego
            room_goto(w_juego);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_reloj, 0, x, y);
draw_sprite_ext(d_reloj, 1, x, y, 1, 1,
    (reloj / m_relojlobby) * 360 + 90, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
