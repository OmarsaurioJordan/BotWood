<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 1 - random(2);
y += 1 - random(2);

reloj_errar = irandom(m_errar);
mov_ia = true;
dir_ia = irandom(359);

reloj_anima[0] = irandom(m_anima);
anima[0] = irandom(3);
reloj_anima[1] = irandom(m_anima * 3);
anima[1] = 0;

altu = 48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    s_anima(id, 0, m_anima, 4);
    s_oscila(id, 1, m_anima * 3, 7);
    s_errar(id, m_errar, m_errar, 30, 0.333, 0.666);
    
    //aumentar altura del ave
    if altu &lt; 80
    {
        altu += 1 + random(1);
    }
    
    //moverse y detectar colision
    var otro = s_colision(x, y, m_rad_u * o_game.eschum, o_edificio,
        m_rad_m, 1, -1);
    if otro == noone
    {
        otro = s_colision(x, y, m_rad_u * o_game.eschum, o_globo,
            m_rad_m, 1, -1);
        if otro == noone
        {
            otro = s_colision(x, y, m_rad_u * o_game.eschum, o_ave,
                m_rad_m, 1, id);
        }
    }
    if otro != noone
    {
        var ddd = point_direction(otro.x, otro.y, x, y);
        x += lengthdir_x(m_velave * dlt, ddd);
        y += lengthdir_y(m_velave * dlt, ddd);
        dir_ia = irandom(359);
    }
    else if mov_ia
    {
        x += lengthdir_x(m_velave * dlt, dir_ia);
        y += lengthdir_y(m_velave * dlt, dir_ia);
    }
    
    //limitar a dentro del circulo
    if point_distance(x, y, o_suelo.x, o_suelo.y) &gt; m_radext * o_suelo.resise
    {
        instance_destroy();
    }
    
    depth = -y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(d_ave, anima[0], x, y - anima[1] - altu, 0.5, 0.5, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
