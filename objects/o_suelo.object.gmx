<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>resise = 1;
depth = 0;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with o_decorado
{
    direction = choose(33, 33, 33, 34);
    if s_colision(x, y, 0, o_casa, 80, 1, -1) != noone and
        irandom(1) &lt;= 0.75
    {
        direction = 32;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_top);
draw_set_halign(fa_center);
if string_length(o_game.segundos) == 1
{
    draw_text_transformed_colour(x, 0, string(o_game.minutos) + ":0" +
        string(o_game.segundos), 1.5, 1.5, 0, c_white, c_white, c_white, c_white, 1);
}
else
{
    draw_text_transformed_colour(x, 0, string(o_game.minutos) + ":" +
        string(o_game.segundos), 1.5, 1.5, 0, c_white, c_white, c_white, c_white, 1);
}

draw_sprite_ext(d_ext_suelo, 0, x, y, resise, resise, 0, c_white, 1);
if room == w_menu
{
    draw_sprite_ext(d_int_suelo, 1, x, y + 50, 1.65, 1.65, 0, c_white, 0.75);
}
else if room == w_lobby
{
    draw_sprite_ext(d_int_suelo, 1, x + 150, y + 40, 1, 1, 0, c_white, 0.75);
    draw_sprite_ext(d_int_suelo, 1, room_width * 0.25 + 150, room_height * 0.25 + 40,
        0.666, 0.666, 0, c_white, 0.75);
    draw_sprite_ext(d_int_suelo, 1, room_width * 0.75 + 150, room_height * 0.25 + 40,
        0.666, 0.666, 0, c_white, 0.75);
    draw_sprite_ext(d_int_suelo, 1, room_width * 0.25 + 150, room_height * 0.75 + 40,
        0.666, 0.666, 0, c_white, 0.75);
    draw_sprite_ext(d_int_suelo, 1, room_width * 0.75 + 150, room_height * 0.75 + 40,
        0.666, 0.666, 0, c_white, 0.75);
    
    with o_pichirilo
    {
        draw_sprite_ext(d_sombra, 0, x, y, 1, 1, 0, c_white, 1);
    }
}

with o_ciudadano
{
    draw_sprite_ext(d_sombra, 0, x, y, o_game.eschum,
        o_game.eschum, 0, c_white, 0.8);
}

with o_ave
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.2, 0.2, 0, c_white, 0.8);
}

with o_proy
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.4, 0.4, 0, c_white, 1);
}
with o_regalo
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.4, 0.4, 0, c_white, 1);
}
with o_caeregalo
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.4, 0.4, 0, c_white, 1);
}

with o_bolago
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.5, 0.5, 0, c_white, 1);
}
with o_bolareg
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.5, 0.5, 0, c_white, 1);
}

with o_dron
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.5, 0.5, 0, c_white, 1);
}

with o_aro
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.7, 0.7, 0, c_white, 1);
}

with o_decorado
{
    draw_sprite_ext(d_sombra, 0, x, y, 1.1, 1.1, 0, c_white, 1);
}
with o_caemaquina
{
    draw_sprite_ext(d_sombra, 0, x, y, 0.8, 0.8, 0, c_white, 1);
}

with o_bloque
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_puerta
{
    if seleccion != 12 and seleccion != 0
    {
        draw_sprite_ext(d_sombra, 0, x, y,
            1.3, 1.3, 0, c_white, 1);
    }
}

with o_opciones
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_elman
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_elmen
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_pacificante
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_selectia
{
    draw_sprite_ext(d_sombra, 0, x, y,
        1.3, 1.3, 0, c_white, 1);
}

with o_reloj
{
    draw_sprite_ext(d_sombra, 0, x, y + 34,
        2, 1.5, 0, c_white, 1);
}

with o_semibot
{
    draw_sprite_ext(d_sombra, 0, x, y,
        8, 8, 0, c_white, 1);
}

if instance_exists(o_creador)
{
    draw_set_alpha(0.25);
    with o_creador
    {
        if seleccion == 15
        {
            draw_circle_colour(x, y, m_rad_m * 3, c_ltgray, c_dkgray, false);
        }
        else
        {
            draw_sprite_ext(d_sombra, 0, x, y, 1.1, 1.1, 0, c_white, 1);
        }
    }
    draw_set_alpha(1);
    
    if room == w_editor
    {
        draw_set_alpha(0.5);
        with o_nodron
        {
            draw_circle_colour(x, y, m_rad_m * 3, c_ltgray, c_dkgray, false);
        }
        draw_set_alpha(1);
        
        var ayuda = "";
        switch (o_creador.seleccion) {
            case 0: ayuda = "TREE:#Destroyed when pushed or hit in melee, but can absorb projectile impacts.";
                break;
            case 1: ayuda = "CURTAIN:#Basic wall for building destructible forts, can be knocked down with melee hits and absorbs projectiles.";
                break;
            case 2: ayuda = "WALL:#Indestructible, cannot be walked through but melee hits and projectiles pass over it.";
                break;
            case 3: ayuda = "ROCK:#Indestructible natural piece, absorbs melee hits and bounces projectiles due to its hardness.";
                break;
            case 4: ayuda = "MATTRESS:#Named in reference to impact training mattresses, this block is movable if hit with melee impact, but cannot be pushed by foot, and projectiles bounce off it.";
                break;
            case 5: ayuda = "EDIFFICE:#Many people live here, strong enough not to fall from pushes, but can be destroyed with a melee hit or two projectile impacts; its function in this game is to be destroyed by players or by the SIEGE bots.";
                break;
            case 6: ayuda = "HOUSE:#Few people live here, so low that melee hits and shots pass over it, but will be destroyed if walked upon.";
                break;
            case 7: ayuda = "DECORATIONS:#Grass, rocks, and hay (if near a HOUSE), no interaction with these in any way.";
                break;
            case 8: ayuda = "BALLOON:#Resembles a giant robot ball, can be easily pushed either on foot, with melee hits, or shots, touching a RING releases colorful vapors, this is used to mark a point!";
                break;
            case 9: ayuda = "STARTING POINT:#This is where the robot of the given color will start.";
                break;
            case 10: ayuda = "AMMUNITION:#These are the balls (projectiles) present at the beginning of the game on the map, to be collected by the robots.";
                break;
            case 11: ayuda = "TOWER:#Sentinel that watches around, will shoot mercilessly at a robot it sees but slowly, it will avoid shooting towards BUILDINGS and won't work if there are none.";
                break;
            case 12: ayuda = "SIEGE:#Automatic robot that moves towards BUILDINGS to knock them down with an unrechargeable melee hit, so it will flee afterwards; if you place these on the map, they won't appear there, instead, they will mark directions towards the ends, where these bots will appear randomly and in waves (if there are BUILDINGS).";
                break;
            case 13: ayuda = "AMMO DRONE:#A drone will drop ammunition randomly on the map, it will keep as much as there are flags (these are not visible in the game), the number of flags will be multiplied by the number of bots on the map.";
                break;
            case 14: ayuda = "AMMO BOT:#The number of flags (not visible in the game) will determine the initial ammunition amount in each player's robot, hence there is a limit.";
                break;
            case 15: ayuda = "NO DRONE:#Areas where the drone will not drop ammunition (not visible in the game).";
                break;
            case 16: ayuda = "RING:#Serves as a reference point, for example, for an obstacle course game, it can change color when touched by a player robot, but this will happen only once.";
                break;
            case 17: ayuda = "PEACE:#A flag (not visible in the game) that, if present, means that player robots will not destroy each other, they will only overheat.";
                break;
        }
        /*
        switch o_creador.seleccion
        {
            case 0: ayuda = "ARBOL:#Se destruye cuando es empujado o golpeado a mele, pero " +
                "puede absorver el impacto de proyectiles.";
                break;
            case 1: ayuda = "CORTINA:#Es el muro basico para construir fuertes destructibles " +
                "ya que se puede tumbar solo con golpe de mele y absorve proyectiles.";
                break;
            case 2: ayuda = "MURITO:#Indestructible, no se puede atravezar caminando pero "+
                "los golpes de mele y proyectiles pasan sobre el.";
                break;
            case 3: ayuda = "ROCA:#Pieza natural indestructible, absorve los golpes de mele" +
                " y hace rebotar los proyectiles a causa de su dureza.";
                break;
            case 4: ayuda = "PAVO:#Nombre puesto como referencia a los colchones de entrenamiento" +
                " de impacto, este bloque es movible si se le da un impacto de mele, pero no puede" +
                " empujarse a pie y los proyectiles rebotan en el.";
                break;
            case 5: ayuda = "EDIFICIO:#Aqui viven muchas personas, fuerte como para no caer por " +
                "empujones, pero se derriba de un golpe de mele o de dos impactos de proyectil; la" +
                " funcion en este juego es ser destruido por los jugadores o por los bots ASEDIADORes.";
                break;
            case 6: ayuda = "CASA:#Aca viven pocas personas, es tan baja que los golpes de mele y " +
                "disparos pasan sobre ella, pero se destruira si se le camina por encima.";
                break;
            case 7: ayuda = "DECORADOS:#Son hierbas, rocas y heno (si esta cerca a una CASA), no se " +
                "interactua con esto de ninguna forma.";
                break;
            case 8: ayuda = "GLOBO:#Recuerda a un balon para robots gigantes, puede empujarse facilmente" +
                " ya sea a pie, con golpes de mele o disparos, al tocar un ARO lo hace botar vapores " +
                "de colores, esto sirve para marcar un punto!";
                break;
            case 9: ayuda = "PUNTO INICIAL:#Aqui comenzara el robot del color dado.";
                break;
            case 10: ayuda = "MUNICION:#Estas son las bolas (proyectiles) que hay al inicio del juego " +
                "en el mapa, para ser recogidas por los robots.";
                break;
            case 11: ayuda = "TORRE:#Centinela que vigila alrededor, al ver a un robot disparara sin " +
                "piedad pero lentamente, evitara disparar en direccion hacia los EDIFICIOs y no " +
                "funcionara si no hay de estos.";
                break;
            case 12: ayuda = "ASEDIADOR:#Robot automatico que se mueve hacia los EDIFICIOs para " +
                "tumbarlos con un golpe de mele no recargable, por lo que huira despues; si pones " +
                "de estos en el mapa, no apareceran ahi, sino que marcaran las direcciones hacia los" +
                " extremos, en donde apareceran al azar y por oleadas estos bots (si hay EDIFICIOs).";
                break;
            case 13: ayuda = "MUNI-DRON:#Un dron repartira municion al azar en el mapa, el mantendra" +
                " tanta como banderines existan (estos no se ven en el juego), el numero de banderines" +
                " se multiplicara por el numero de bots en el mapa.";
                break;
            case 14: ayuda = "MUNI-BOT:#El numero de banderines (que no se ven en juego), definira " +
                "la cantidad de municion inicial en cada robot de jugador, por ello hay limite.";
                break;
            case 15: ayuda = "NO-DRON:#Zonas en las que el dron no dejara caer municion (no se " +
                "ven en juego).";
                break;
            case 16: ayuda = "ARO:#Sirve de punto de referencia, por ejemplo para un juego de " +
                "carreras con obstaculos, puede cambiar de color al ser tocado por un robot " +
                "de jugador, pero esto ocurrira solo una vez.";
                break;
            case 17: ayuda = "PAZ:#Un banderin (no se vera en juego) que de existir representa " +
                "que los robots de jugadores no se destruiran entre ellos, solo se recalentaran.";
                break;
        }*/
        draw_set_valign(fa_top);
        draw_set_halign(fa_left);
        draw_text_ext_transformed_colour(32, 64,
            "EDITOR:#Here you can create a map to play, all the modalityes are open to you..." +
            " back to menu with ESCAPE key but save your map first." +
            "##Use ENTER to save your map, it will be saved in the bwmap_user.ini file, so " +
            "the information in it will be overwrited, this file is in %localappdata% BotWood folder," +
            " if you wish export it, press F8; and can import it with F7 (make this in main menu mode)." +
            "##Use LEFT-CLIC to create things.##Use RIGHT-CLIC to delete things." +
            "##Hold press SPACE to delete things continuously.##Use MOUSE-SCROLL to change selection." +
            "##" + ayuda,
            16, 350, 1.35, 1.35, 0, c_white, c_white, c_white, c_white, 1);
    }
}

draw_set_alpha(0.25);
var ccc;
with o_robot
{
    if origen.laser
    {
        switch origen.ident
        {
            case 0: ccc = c_purple; break;
            case 1: ccc = c_green; break;
            case 2: ccc = c_red; break;
            case 3: ccc = c_blue; break;
            default: ccc = c_black; break;
        }
        draw_line_width_colour(x, y,
            x + lengthdir_x(m_laser, direction),
            y + lengthdir_y(m_laser, direction),
            3, ccc, ccc);
    }
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
