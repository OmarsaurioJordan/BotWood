<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj_anima[0] = irandom(m_anima * 3);
anima[0] = 0;

reloj_anima[1] = irandom(m_anima);
anima[1] = irandom(3);

reloj_deposito = 0;
xx = 0;
yy = 0;

reloj_errar = irandom(m_errar);
mov_ia = true;
dir_ia = irandom(359);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !o_game.pausa
{
    s_oscila(id, 0, m_anima * 3, 7);
    s_anima(id, 1, m_anima * 0.5, 4);
    s_errar(id, m_errar, m_errar, 60, 0.333, 0.666);
    
    if xx == 0
    {
        reloj_deposito += dlt
        if reloj_deposito &gt;= 30000000
        {
            reloj_deposito = 0;
            
            if instance_number(o_regalo) &lt; o_game.munidronsuelo
            {
                var otro, xm, ym;
                var dia = m_radext * o_suelo.resise * 0.9;
                var f = 0;
                do
                {
                    do
                    {
                        xm = o_suelo.x + dia - irandom(dia * 2);
                        ym = o_suelo.y + dia - irandom(dia * 2);
                    }
                    until point_distance(xm, ym, o_suelo.x, o_suelo.y) &lt; dia;
                    otro = s_colision(xm, ym, 8, o_bloque, m_rad_m, 1, -1);
                    if otro == noone
                    {
                        otro = s_colision(xm, ym, 8, o_regalo, 8, 1, -1);
                        if otro == noone
                        {
                            otro = s_colision(xm, ym, 8, o_decorado, m_rad_m * 0.5, 1, -1);
                            if otro == noone
                            {
                                otro = s_colision(xm, ym, 8, o_caemaquina, m_rad_m * 0.5, 1, -1);
                            }
                        }
                    }
                    f++;
                }
                until otro == noone or f &gt; 100;
                if f &lt;= 100
                {
                    xx = xm;
                    yy = ym;
                }
            }
        }
        
        if mov_ia
        {
            x += lengthdir_x(m_veldron * dlt, dir_ia);
            y += lengthdir_y(m_veldron * dlt, dir_ia);
            
            //limitar a dentro del circulo
            if point_distance(x, y, o_suelo.x, o_suelo.y) &gt; m_radext * o_suelo.resise
            {
                dir_ia = point_direction(x, y, o_suelo.x, o_suelo.y);
            }
        }
    }
    else
    {
        if point_distance(x, y, xx, yy) &lt;= m_rad_m * 0.25
        {
            instance_create(xx, yy, o_caeregalo);
            xx = 0;
        }
        else
        {
            direction = point_direction(x, y, xx, yy);
            x += lengthdir_x(dlt * m_veldron, direction);
            y += lengthdir_y(dlt * m_veldron, direction);
        }
    }
    
    depth = -y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_ext_robot, 73, x, y - anima[0] - m_altudron);
draw_sprite(d_ext_robot, 74 + anima[1], x, y - anima[0] - m_altudron);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
